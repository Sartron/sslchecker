--------------------------
--   Character Legend   --
--------------------------
+ Addition
- Removal
~ Change
_ Fix

--------------------------
-- 0.1   April 30 2017  --
--------------------------
Initial release

--------------------------
-- 0.2   April 31 2017  --
--------------------------
+ Added ParseDate() which adds a 0 to dates that are missing it. This increases the accuracy of the SSL comparison.

--------------------------
-- 0.3   May 04 2017    --
--------------------------
+ Added exit codes 4 and 5 for representing a time out and connection refusal (respectively).
_ Program will exit if unable to curl URL. This will prevent parsing of an invalid URL.
_ Fixed exit codes 2 and 3 not actually being sent from the script.

--------------------------
-- 0.4   May 15 2017    --
--------------------------
+ Added --expired which will overwrite the exit code with the SSL certificate's expiration status.
~ Modified script output and added color to expiration status.
~ Added a timeout clause to s_client connections to prevent it from running for ~300 seconds.
~ General optimization of code.
_ Script requires both a domain and port in order to proceed, whereas before it would try to use an undefined port.

--------------------------
-- 0.5   May 24 2017    --
--------------------------
+ SNI connection established using s_client -servername instead of curl.
- Removed ParseDate() in favor of 'date -d'.
- Removed use of curl.
- Removed the comparison results section since it feels useless.
~ Dates are now localized to system time.

--------------------------
-- 0.51   May 24 2017   --
--------------------------
- Removed 'https://' from exit code 5 and 6 as no curl connection is being made.
- Removed some leftover references to curl.
_ Set s_client variables back to global to allow exit codes to be retained.

--------------------------
-- 0.52   May 25 2017   --
--------------------------
~ Optimized argument checking.
_ Fixed errot that would occur when dig returned more than 1 line.
_ Fixed incorrect exit codes: 2 » 3, 3 » 4
_ Functions have been description now.

--------------------------
-- 0.53   May 31 2017   --
--------------------------
_ Self-signed certificates now return 'none' as their organization rather than a blank output.

--------------------------
-- 0.6   June 04 2017   --
--------------------------
+ Added --san which may be used to retrieve the Subject Alternative Name for the certificate.
+ Added --output which can be used to specify what connection is being used (connection referring to no SNI vs. SNI).
+ Added ShowHelp() which is by default called when no arguments specified.
+ Added exit code 3 for certificates that are specifically not expired.
~ Restructured script design and optimized code for use with new arguments.
- Removed --resultonly. The same functionality can be replicated by redirecting the output to /dev/null.
_ Updated pattern for the awk statement used to retrieve certificate issuer. It can now handle non /CN= separators which fixes issues with GoDaddy-issued certificates.

--------------------------
-- 0.61   June 08 2017  --
--------------------------
~ Script will now use port 443 by default.

--------------------------
-- 0.7   June 11 2017   --
--------------------------
+ Added support for connecting to an IP rather than just a domain name.
+ Added --help which simply calls ShowHelp() and exits the script.
~ -d --domain changed to -h --host so as to normalize terminology between domain names and IPs.
_ Empty Subject Alternative Name will now return 'None' if there are no results.
_ Improved logic of parsing common name in situations where information is sorted abnormally. This specifically resolves an issue for the site ninava.nahrainweb.com.

--------------------------
-- 0.71   June 14 2017  --
-- Commit c08548e8      --
--------------------------
~ -p --port turned into an optional argument.
~ Partial commit of changes for 0.8. Return to 0.8 changelog for more information.

--------------------------
-- 0.8   June 18 2017   --
--------------------------
+ Added CompatibilityCheck().
~ Improved error parsing by piping stderr to stdout for s_client connections, and then parsing the text rather than the exit code.
~ Script is overall more clean and logical although much larger in line size.
_ Added clause for when the script is executed from a CentOS 5 server. s_client -servername will not be used.
_ Added clause for servers that do not have the GNU coreutil timeout. In those instances, the tool will simply not be used.
_ Script will now reject port 80 as specifying this port before would result in an error.
_ Fixed --expired so it now returns exit codes 2 and 3. Before, it would only return 2 as that was a part of its original design and not updated for v0.6.

--------------------------
-- 0.81   June 20 2017  --
--------------------------
+ Added exit code listing to --help.
+ Added clause to better catch generic errors.
- Removed port 80 from unallowed ports. This is no longer needed as any incorrect protocol received is parsed correctly.
~ Tidied up README information.

--------------------------
-- 0.82   July 01 2017  --
--------------------------
~ Tweaked ShowHelp() to show less information when --help isn't explicitly specified.
_ Empty certificate common name will now return 'None' if there are no results. This is needed in situations where a Multi-Domain SSL only covers SAN.

--------------------------
-- 0.9   July 19 2017   --
--------------------------
+ Added -n --name which allows you to specify a servername variable to send to the host (used with SNI).
+ Added --protocol which allows you to connect to certain services such as FTP.
+ Added --nosni which disables the use of a servername in the s_client connection.
+ Added --force which allows the user to bypass the script's ping check. Ping test wasn't 100% reliable, and the script already has secondary error checking built-in behind the ping.
- Removed --expired, this functionality can be re-created with a simple grep.
- Removed --output as it is no longer needed.
~ Wrapping argument handling in function HandleArgs().
~ Removed functions GetNoSNI() and GetSNI() in favor of SClient_X509() which simply merges their functions together.
~ Removed function EstablishConn(). It has now been replaced by SClientConnect(), SClientConnect_SNI(), and SClient_ErrorParse().
~ Script will now by default only use an SNI connection provided the server is compatible with SNI.
~ Altered header of script output to specify the connection information.
~ Tweaked descriptions provided by ShowHelp().
~ General documentation of script improved.
~ Updated README to serve script's new purpose and new arguments.

--------------------------
-- 0.91   July 30 2017  --
--------------------------
+ Added ParseStdin() which allows the script to interpret valid x509 PEM formatted certificates from standard input. Maybe it works for other formats since it just used openssl x509, not sure.
+ Error code 7 added which handles any error caused by the certificate received from stdin. No verbose errors are planned for certificates themselves, only s_client connections.
+ ShowHelp() shows an 'official' release date for the current script version now.
~ Tweaked SClient_X509() to allow it to handle PEM output rather than just s_client output. Parameter $2 allows the function to toggle the typical s_client connection information.
~ Worked on standardizing comments within the source code a little more.
~ Using an IP address as the host now requires -n or --name in order to supply -servername to the host. IP address hosts will by default no longer use SNI.
_ Fixed error that would occur if common name had a space in it. This could occur in instances where the common name is not a domain name.
_ Added error parsing for s_client errors originating from write:errno=. The error code I got specifically was 104 which apparently indicates connection reset (ECONNRESET). It'll just use a generic error for now.

----------------------------
-- 0.92   August 03 2017  --
----------------------------
+ Support for DER & NET encoded x509 certificates.
~ CodeToBool() considers exit codes greater than 0 false rather than just exit code 1.
~ Renamed SClient_GetSAN() to X509_GetSAN().
~ SClient_GetSAN() is now called regardless of whether or not --san is specified. --san is now used explicitly to retrieve the full list of SAN fields.
~ SClientConnect() and SClientConnect_SNI() merged into one function.
~ General code & comment cleanup.
_ Fixed the use of an incorrect protocol with the wrong port. This would occur when coreutil timeout cuts off the error needed to parse the issue.

----------------------------
-- 0.93   August 16 2017  --
----------------------------
+ Added basic extended validation test to the script.
+ Added revocation test using OCSP.
~ A lot of code has been optimized/restructured.

------------------------------
-- 0.94   September 3 2017  --
------------------------------
+ Added --timeout option to allow modification of s_client timeout. Requires coreutils.
~ s_client connections are only made if needed. This should help when optimizing total duration of the script.
~ General visual changes made to code.

------------------------------
-- 1.00   November 30 2017  --
------------------------------
+ Added function ParseArgs_IsValid() to verify passed arguments rather than repeatedly writing the same if statement clause.
+ Script checks if the openssl binary can be found, and exits if not.
~ Massive rewrite and organization of code. Again.
 ~ Condensed majority of code to be executed from function Main() rather than exist outside of it.
 ~ Replaced a lot of 'echo $var | parser' type lines and instead opted to use here strings.
 ~ Standard input functionality rewritten to be much simpler. openssl x509 -in is always used now rather than cat /dev/stdin | openssl x509.
 ~ Smartened up SNI logic by renaming variable $NOSNI to $USESNI. By default, $USESNI is set to 1. If $SNICOMP is set to 0 or --nosni is specified, then so is $USESNI.

------------------------------
-- 1.01   November 30 2017  --
------------------------------
- Removed --force in favor of just using the already existing error handling in SClient_ErrorParse().

------------------------------
-- 1.02   December 03 2017  --
------------------------------
~ Missed a couple 'echo $var | program' statements. Converted them to use a here string.
_ Exit code for script incompatibility was set to 1 which is inaccurate. Gave it exit code 6.

-----------------------------
-- 1.03   January 20 2018  --
-----------------------------
~ Minor code tweaks.
~ Redid X509_SubjectAltName() to use a one-line Perl grep statement.